version: '3.8'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      - zookeeper
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - kafka-net

  app:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      - kafka
    container_name: go-app
    ports:
      - "8080:8080"
    environment:
      CONFIG_PATH: /app/config/config.yaml
    restart:
      unless-stopped
    networks:
      - kafka-net

  kafka-init:
    image: confluentinc/cp-kafka:7.6.0
    depends_on:
      kafka:
        condition: service_healthy
    container_name: kafka-init
    entrypoint: ["/bin/sh", "-c"]
    command:
      - |
        kafka-topics --create \
          --if-not-exists \
          --topic events \
          --bootstrap-server kafka:9092 \
          --partitions 1 \
          --replication-factor 1
    networks:
      - kafka-net

networks:
  kafka-net:
    driver: bridge
